alembic\env.py
    run_migrations_offline()
    run_migrations_online()

corefunc\canonizer.py
    _split()
    apply_previous()
    minimal_epsilon()

corefunc\dataprofiler.py
    quick_viz()
    run_profiling()

CSV\autofetch.py
    fetch_scrobbles_csv()

DB\__init__.py
    get_engine()
    get_session()

DB\common.py
    make_sessionmaker()

DB\guard_intervals.py
    _overlap_clause()
    no_overlapping_user_countries()

DB\models.py
    Base
    ArtistVariantsCanonized
    Scrobble
    ArtistCountry
    UserCountry
    AsciiChar

DB\ops.py
    _prepare_scrobble_rows()
    ascii_freq()
    bulk_insert_scrobbles()
    bulk_insert_scrobbles_to_sqlite()
    bulk_insert_scrobbles_to_mysql()
    save_group()
    latest_scrobble_table_to_df()
    seed_ascii_chars()

dev_canon.py
    _split_variants()

dev_profile.py
    MBXMLFilter
    _split_variants()
    _country_for_series()

enrich.py
    enrich_artist_country()

helpers\cli.py
    _apply_canonical()
    _remember()
    ask()
    choose_lastfm_user()
    unify_artist_names_cli()
    verify_commas()
    yes_no()

helpers\cluster.py
    _clf_scorer()
    clf_proba()
    calculate_clustering_metrics()
    fuzzy_scores()
    most_similar()

helpers\io.py
    _parquet_name()
    dump_parquet()
    latest_csv()
    latest_parquet()
    dump_latest_table_to_parquet()
    register_custom_palette()
    save_as_word_table()

helpers\stats.py
    cramers_v()
    drop_high_corr_features()
    iterative_correlation_dropper()
    missing_value_ratio()
    variance_testing()
    winsorization_outliers()

HTTP\client.py
    make_request()

lfAPI.py
    _clean_track()
    fetch_misc_data_from_lastfmapi()
    fetch_recent_tracks_all_pages()
    generate_lastfm_signature()
    lastfm_request()
    LastFMError

LLM.py
    train_llm_and_enrich_data()

main.py
    main()

mbAPI.py
    MBArtistCache
    safe_mb_call()
    _rate_limited()
    _retryable()
    init()
    search_artist()
    _get_session()
    lookup_artist()
    fetch_country()
    _cache_artist()
    add_alias()
    _get_cached()

scripts\list_symbols.py
    list_defs()
