services:
  # MySQL database for CanonFodder
  db:
    image: mysql:8.3
    container_name: canonfodder-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: canonroot
      MYSQL_DATABASE: canonfodder
      MYSQL_USER: canon
      MYSQL_PASSWORD: canon
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CanonFodder application with Airflow
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: canonfodder-app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - LASTFM_API_KEY=${LASTFM_API_KEY}
      - LASTFM_USER=${LASTFM_USER}
      - MB_APP_NAME=CanonFodder
      - MB_APP_VERSION=1.2
      - MB_CONTACT=${MB_CONTACT}
      - DB_URL=mysql+pymysql://canon:canon@db/canonfodder
      - UC_SRC=mysql+pymysql://canon:canon@db/canonfodder
      - UC_DST=${UC_SRC}
      - AIRFLOW_HOME=/opt/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__WEB_SERVER_HOST=0.0.0.0
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./PQ:/opt/airflow/PQ
      - airflow_data:/opt/airflow
      - ./supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    command: >
      bash -c "
        # Initialize database schema
        alembic upgrade head &&

        # Populate user country data
        python /opt/airflow/scripts/uc_populate.py &&

        # Initialize Airflow
        airflow db init &&

        # Apply the fix for 'airflow users' command
        python /opt/airflow/scripts/fix_airflow_users_command_docker_v3.py &&

        # Create Airflow admin user if it doesn't exist
        (airflow user list | grep -q admin) || 
        airflow user create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&

        # Create log directories for supervisord
        mkdir -p /var/log &&
        touch /var/log/supervisord.log /var/log/airflow-webserver.log /var/log/airflow-scheduler.log &&
        chown -R airflow:airflow /var/log &&

        # Start supervisord to manage Airflow processes
        supervisord -c /etc/supervisor/conf.d/supervisord.conf
      "

  # Database management interface
  adminer:
    image: adminer:latest
    container_name: canonfodder-adminer
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - db

volumes:
  dbdata:
  airflow_data:
